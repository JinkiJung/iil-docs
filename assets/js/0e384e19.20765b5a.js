"use strict";(self.webpackChunkiil_docs=self.webpackChunkiil_docs||[]).push([[671],{7876:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=t(5893),s=t(1151);const o={sidebar_position:1},r="Introduction",a={id:"intro",title:"Introduction",description:"iil is a work description model for human.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/iil-docs/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Model",permalink:"/iil-docs/docs/category/model"}},c={},d=[{value:"Usage of iil Model in Planning and Execution Phases",id:"usage-of-iil-model-in-planning-and-execution-phases",level:2}];function l(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",p:"p",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.em,{children:"iil"})," is a work description model for human.\nThe goal of iil is to render all levels (from high- to unit-level) of work in a single representation.\nIt's similar to playing with Lego blocks that can be easily assembled and customized."]}),"\n",(0,n.jsxs)(i.p,{children:["The importance of ",(0,n.jsx)(i.em,{children:"iil"})," is to state responsibility and where or how a work should be started or finished. Also it is possible to represent the relationship between iils such as consequence or super/subtask."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.em,{children:"iil"})," can help people understand tasks through a clear and concise representation of work which can be used to effectively communicate about work across all levels of an organization."]}),"\n",(0,n.jsx)(i.h2,{id:"usage-of-iil-model-in-planning-and-execution-phases",children:"Usage of iil Model in Planning and Execution Phases"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.em,{children:"iil"})," model plays a crucial role in both planning and execution phases of a process."]}),"\n",(0,n.jsxs)(i.p,{children:["During the planning phase, the ",(0,n.jsx)(i.em,{children:"iil"})," model aids in the formulation of tasks by providing a structured format to define all necessary attributes of a task. The ",(0,n.jsx)(i.code,{children:"goal"})," represents which ",(0,n.jsx)(i.em,{children:"iil"})," is associated as a parent ",(0,n.jsx)(i.em,{children:"iil"}),", which aims to describe a higher level goal. The ",(0,n.jsx)(i.code,{children:"about"})," attribute can be used to describe the task to give better information for ",(0,n.jsx)(i.code,{children:"actor"})," and others, while the ",(0,n.jsx)(i.code,{children:"maintainer"})," and ",(0,n.jsx)(i.code,{children:"owner"})," attributes identify the people or entities responsible for maintaining the task. Furthermore, the ",(0,n.jsx)(i.code,{children:"variable"})," attribute allows for the definition of any additional variables associated with the task."]}),"\n",(0,n.jsxs)(i.p,{children:["During the execution phase, ",(0,n.jsx)(i.em,{children:"iil"})," model becomes pivotal in managing and tracking the progress of each task. The ",(0,n.jsx)(i.code,{children:"actor"})," clarifies who is responsible to this task. The ",(0,n.jsx)(i.code,{children:"state"})," attribute is used to record the current status of the task, which can be updated as the task progresses. The ",(0,n.jsx)(i.code,{children:"output"})," attribute captures the results produced by a task, while the ",(0,n.jsx)(i.code,{children:"next"})," attribute determines the subsequent task to be performed. In addition, the ",(0,n.jsx)(i.em,{children:"iil"})," model includes ",(0,n.jsx)(i.code,{children:"activateIf"})," and ",(0,n.jsx)(i.code,{children:"finishIf"})," conditions which transfer ",(0,n.jsx)(i.em,{children:"iil"}),"'s state into activated and finished, respectively. This allows for dynamic control of the ",(0,n.jsx)(i.em,{children:"iil"}),"'s lifecycle based on the real-time progress and outcomes. The ",(0,n.jsx)(i.code,{children:"help"})," attribute can be used to interactively provide additional information for users to accomplish the condition for ",(0,n.jsx)(i.code,{children:"finishIf"}),". Finally, the ",(0,n.jsx)(i.code,{children:"updatedAt"})," attribute ensures that the most recent update time of each task is recorded for tracking purposes."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.em,{children:"iil"})," applies event-driven nature in order to handle conditions such as ",(0,n.jsx)(i.code,{children:"activateIf"})," and ",(0,n.jsx)(i.code,{children:"finishIf"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>r});var n=t(7294);const s={},o=n.createContext(s);function r(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);