"use strict";(self.webpackChunkiil_docs=self.webpackChunkiil_docs||[]).push([[4842],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=i,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:2},o="Data structure",s={unversionedId:"concept/data-structure",id:"concept/data-structure",title:"Data structure",description:"Tasc",source:"@site/docs/concept/data-structure.md",sourceDirName:"concept",slug:"/concept/data-structure",permalink:"/docs/concept/data-structure",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concept/data-structure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Concept",permalink:"/docs/concept/"},next:{title:"Tutorial - Basics",permalink:"/docs/category/tutorial---basics"}},c={},l=[],u={toc:l};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-structure"},"Data structure"),(0,i.kt)("p",null,"Tasc\nTasc is a basic component and a single step of a scenario, following a simple syntax below:"),(0,i.kt)("p",null,"goal: high-level task description\ngiven: input\nstartWhen: condition that initiates Tasc\nactor: intelligent terminus who performs Tasc\nact: a static or dynamic action to accomplish goal\nguidedBy: instruction guiding actor\nendWhen: condition that terminates Tasc and triggers leadTo\nproduce: output being generated as an outcome of act\nleadTo: flow of scoring, feedback, and transition to next Tasc\nTasc has two basic states, hasPerformed and isDone."),(0,i.kt)("p",null,"Scenario\nA scenario is a consequences of Tascs, which will eventually turn into a linked list."),(0,i.kt)("p",null,"Terminus\nTerminus is a object has physical properties of a location and a bounding area, and\nhas state\nmight represent spatial knowledge\nmight perform action\ncan be a subject of Instruction\nAction\nAction is a dynamic behaviour of Terminus that produce State or data. Some action has target of the action which is Terminus type. Action can be interpreted as a motor skill of a user to be performed at Tasc. The measurement for performance evaluation can be taken from Action."),(0,i.kt)("p",null,"Condition\nCondition is a deterministic criteria triggered by a range of State change. For example until states the termination condition of Tasc. To be more specific until performs as a trigger that the termination condition should be checked where the actual validation of the condition is performed by then."),(0,i.kt)("p",null,"Instruction\nInstruction transfers Information to Terminus through single or multiple Interfaces. A Tasc can have multiple instructions for the multimodal interaction. It aims to guide a human user as a Terminus to accomplish the goal of the Tasc through multimodal interfaces. For the case of Terminus as autonomous agent it can be used to inform its state or progress to human observers."),(0,i.kt)("p",null,"Context\nContext is a description of prerequisite. Currently supported as a list of strings."),(0,i.kt)("p",null,"Flow\nFlow is post processing of Tasc to control the flow afterward and consists of three parts: Evaluation, Feedback, and link to the next Tasc. Evaluation can be made through an equation with the measurements as variables resulting a float value. Feedback then shows effects corresponding the score, which represents the user\u2019s performance through either a positive or negative way. Flow also provides link to the next Tasc based on the evaluation score."),(0,i.kt)("p",null,"Interface\nInterface is a tool to represent Information with a sensory modality (such as visual, auditory, haptic, and others)."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"iil")," is a high-level script for representing tasks and its consequences. iil can represent a procedure of task, scenario by indicating which information needs to be transferred, and how the performance of the actor can be evaluated by chosen measurements. The use of iil will radically reduce the time and cost of implementing a scenario when it comes to development of an executable program of VR/AR or simulation. The scope of iil is only for modelling of scenario. It\u2019s execution is dependent to the engine that compiles the script. Same iil can be differently interpreted by different dependency. iil enables more accurate communication of client and developer through syntax in implementation."),(0,i.kt)("p",null,"Primary usage of iil will be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Simple creation of a scenario or a situation with sequential flow"),(0,i.kt)("li",{parentName:"ul"},"Designing information transfer for user within context"),(0,i.kt)("li",{parentName:"ul"},"Evaluating user performance on a per-step basis or whole"),(0,i.kt)("li",{parentName:"ul"},"Plug-and-play scenario execution based on iil and engine"),(0,i.kt)("li",{parentName:"ul"},"Evaluation of scenario itself (quality of scenario in terms of information transfer)")),(0,i.kt)("p",null,"iil has been influenced by several concepts such as ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/GOMS"},"GOMS model"),", ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Behavior-driven_development"},"behavior-driven development (BDD)"),", ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Human_processor_model"},"Human processor model (MHP)"),", ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"promise")," and ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Event_condition_action"},"Event-Condition-Action rule model (ECA)"),"."),(0,i.kt)("p",null,"Related GitHub repositories are:\ndocumentation ",(0,i.kt)("em",{parentName:"p"}," Tasc documentation: (",(0,i.kt)("a",{parentName:"em",href:"https://github.com/JinkiJung/Tasc"},"https://github.com/JinkiJung/Tasc"),")\neditor ")," Tasc to-do list: (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JinkiJung/tasc-todo"},"https://github.com/JinkiJung/tasc-todo"),") ",(0,i.kt)("em",{parentName:"p"}," Tasc web-editor: (",(0,i.kt)("a",{parentName:"em",href:"https://github.com/JinkiJung/Tasc-editor"},"https://github.com/JinkiJung/Tasc-editor"),")\nengine ")," Tasc-Unity engine: (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JinkiJung/Tasc-Unity"},"https://github.com/JinkiJung/Tasc-Unity"),")\nreference implementations with the engine ",(0,i.kt)("em",{parentName:"p"}," Maze escape 3D as a reference implementation based on Tasc-Unity: (",(0,i.kt)("a",{parentName:"em",href:"https://github.com/VirtualityForSafety/MazeEscape3D"},"https://github.com/VirtualityForSafety/MazeEscape3D"),") ")," Stretching exercise 3D as a reference implementation based on Tasc-Unity: (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/VirtualityForSafety/StretchingExercise3D"},"https://github.com/VirtualityForSafety/StretchingExercise3D"),") * Crane manipulation 3D as a reference implementation based on Tasc-Unity: (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/VirtualityForSafety/CraneManipulation3D"},"https://github.com/VirtualityForSafety/CraneManipulation3D"),")"))}p.isMDXComponent=!0}}]);