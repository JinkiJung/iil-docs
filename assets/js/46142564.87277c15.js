"use strict";(self.webpackChunkiil_docs=self.webpackChunkiil_docs||[]).push([[364],{7389:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var t=i(5893),r=i(1151);const o={sidebar_position:1},s="iil",d={id:"model/iil",title:"iil",description:"iil is a simple data model defined with a JSON schema below:",source:"@site/docs/model/iil.md",sourceDirName:"model",slug:"/model/iil",permalink:"/iil-docs/docs/model/iil",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Model",permalink:"/iil-docs/docs/category/model"},next:{title:"Condition",permalink:"/iil-docs/docs/model/condition"}},c={},a=[{value:"Attributes",id:"attributes",level:2},{value:"for work description",id:"for-work-description",level:3},{value:"for metadata",id:"for-metadata",level:3},{value:"for interaction handling",id:"for-interaction-handling",level:3},{value:"for exception handling",id:"for-exception-handling",level:3}];function l(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"iil",children:"iil"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"iil"})," is a simple data model defined with a JSON schema below:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "$id": "https://github.com/JinkiJung/iil/blob/main/iil.schema.json",\n  "$version": "1.0",\n  "$schema": "https://json-schema.org/draft/2020-12/schema",\n  "type": "object",\n  "description": "A work description model.",\n  "properties": {\n    "id": {\n      "type": "string",\n      "format": "uuid",\n      "description": "An unique identifier for an iil."\n    },\n    "namespace": {\n      "type": "string",\n      "description": "a namespace under which the work is categorized."\n    },\n    "version": {\n      "type": "string",\n      "description": "a version number of the work."\n    },\n    "help": {\n      "type": "object",\n      "additionalProperties": {\n        "type": "object"\n      },\n      "description": "metadata that can be informed to actor in order to lead them to complition of a work"\n    },\n    "about": {\n      "type": "object",\n      "additionalProperties": {\n        "type": "object"\n      },\n      "description": "metadata explaining the work itself"\n    },\n    "goal": {\n      "type": "string",\n      "format": "uuid",\n      "description": "an unique identifier of the parent work."\n    },\n    "input": {\n      "type": "object",\n      "additionalProperties": {\n        "type": "object"\n      },\n      "description": "an input required for the work."\n    },\n    "activateIf": {\n      "$ref": "#/$defs/Condition",\n      "description": "condition that activates this work."\n    },\n    "act": {\n      "$ref": "#/$defs/Action",\n      "description": "action that is expected to be done by actor."\n    },\n    "actor": {\n      "$ref": "#/$defs/Actor",\n      "description": "actor who is responsible for task performance."\n    },\n    "finishIf": {\n      "$ref": "#/$defs/Condition",\n      "description": "condition under which the task is completed."\n    },\n    "output": {\n      "type": "object",\n      "additionalProperties": {\n        "type": "object"\n      },\n      "description": "output produced by the task."\n    },\n    "variable": {\n      "type": "object",\n      "additionalProperties": {\n        "type": "object"\n      },\n      "description": "variables associated with the task."\n    },\n    "maintainer": {\n      "type": "string",\n      "description": "an ID of maintainer"\n    },\n    "owner": {\n      "type": "string",\n      "description": "an ID of owner"\n    },\n    "state": {\n      "type": "string",\n      "enum": [\n        "NOT_ACTIVATED",\n        "ACTIVATED",\n        "PENDING",\n        "FINISHED",\n        "ABORTED"\n      ],\n      "description": "a state of iil"\n    },\n    "abortIf": {\n      "$ref": "#/$defs/Condition",\n      "description": "condition of abortion (mostly due to external factor)"\n    },\n    "updatedAt": {\n      "type": "string",\n      "format": "date-time",\n      "description": "time of last update"\n    },\n    "next": {\n      "type": "object",\n      "additionalProperties": {\n        "type": "object"\n      },\n      "description": "next task(s) to be performed after the current task."\n    }\n  },\n  "$defs" : {\n    "Action": {\n      "type": "object",\n      "properties": {\n        "id": {\n          "type": "string",\n          "format": "uuid"\n        },\n        "namespace": {\n          "type": "string"\n        },\n        "version": {\n          "type": "string"\n        },\n        "shortName": {\n          "type": "string"\n        },\n        "name": {\n          "type": "string"\n        },\n        "code": {\n          "type": "string"\n        }\n      }\n    },\n    "Actor": {\n      "type": "object",\n      "properties": {\n        "id": {\n          "type": "string",\n          "format": "uuid"\n        },\n        "name": {\n          "type": "string"\n        },\n        "email": {\n          "type": "string"\n        },\n        "iconLink": {\n          "type": "string"\n        },\n        "actorList": {\n          "uniqueItems": true,\n          "type": "array",\n          "items": {\n            "$ref": "#/$defs/Actor"\n          }\n        },\n        "group": {\n          "type": "boolean"\n        }\n      }\n    },\n    "Condition": {\n      "type": "object",\n      "properties": {\n        "id": {\n          "type": "string",\n          "format": "uuid"\n        },\n        "namespace": {\n          "type": "string"\n        },\n        "version": {\n          "type": "string"\n        },\n        "shortName": {\n          "type": "string"\n        },\n        "name": {\n          "type": "string"\n        },\n        "type": {\n          "type": "string",\n          "enum": [\n            "TIME",\n            "LOCATION",\n            "IIL_INPUT",\n            "IIL_VARIABLE",\n            "IIL_STATE",\n            "EVENT"\n          ]\n        },\n        "code": {\n          "type": "string"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["Up-to-date version of iil model is maintained at ",(0,t.jsx)(e.a,{href:"https://github.com/JinkiJung/iil",children:"https://github.com/JinkiJung/iil"}),"."]}),"\n",(0,t.jsx)(e.h2,{id:"attributes",children:"Attributes"}),"\n",(0,t.jsx)(e.p,{children:"Here you can find more comprehensive explanation of each attribute associated with different context."}),"\n",(0,t.jsx)(e.h3,{id:"for-work-description",children:"for work description"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"UUID goal;"})," : Unique identifier for the goal that the task is associated with."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Condition activateIf;"})," : The condition under which the task is activated."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Action act;"})," : The action that the task performs."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Actor actor;"})," : The actor who performs the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Condition finishIf;"})," : The condition under which the task is completed."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Map<String, Object> input;"})," : The input required for the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Map<String, Object> output;"})," : The output produced by the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Map<String, Object> next;"})," : The next task to be performed after the current task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Map<String, Object> variable;"})," : Variables associated with the task."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"for-metadata",children:"for metadata"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"UUID id;"})," : Unique identifier for the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"String namespace;"})," : The namespace under which the task is categorized."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"String version;"})," : Version number of the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"String maintainer;"})," : The person or entity responsible for maintaining the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"String owner;"})," : The owner of the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"IilState state;"})," : The current state of the task."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"LocalDateTime updatedAt;"})," : The timestamp of when the task was last updated."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"Map<String, Object> about;"})," : Description of the task."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"for-interaction-handling",children:"for interaction handling"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"Map<String, Object> help;"})," : Information that is provided when user requests for help."]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"for-exception-handling",children:"for exception handling"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"Condition abortIf;"})," : The condition under which the task is aborted."]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>d,a:()=>s});var t=i(7294);const r={},o=t.createContext(r);function s(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);